# shellcheck shell=bash

# Don't show any logs, it gets pretty noisy.
export DIRENV_LOG_FORMAT=''
echo

# Dependencies
#
# WARNING: Renovate uses a regular expression to find these dependencies
# and update them. To ensure the regular expression finds a match, the lines
# declaring the dependencies should not be changed in any way. For example,
# splitting the command to multiple lines using '\'.
source_url 'https://raw.githubusercontent.com/nix-community/nix-direnv/3.0.6/direnvrc' 'sha256-RYcUJaRMf8oF5LznDrlCXbkOQrywm0HDv1VjYGaJGdM='

function load_environment {
  load_nix
  layout go
  load_secrets
  load_vscode
}

function load_nix {
  local nix_wrapper_path
  nix_wrapper_path="$(dirname "$(command -v nix)")"

  nix_direnv_manual_reload
  use flake .#

  # I want to use my nix wrapper so I need to prepend it to the PATH after the
  # flake bin is added. I first try to remove it from the PATH so there are not
  # duplicates.
  PATH_rm "$nix_wrapper_path"
  PATH_add "$nix_wrapper_path"
}

function load_secrets {
  local -r path='envrc-secrets.bash'
  if ! [ -f "$path" ]; then
    return
  fi

  # shellcheck disable=1090
  source "$path"
}

function load_vscode {
  if is_in_vscode && ! is_in_vscode_terminal; then
    # TODO: The VS Code output panel doesn't interpret escape sequences yet the
    # output file it gives to git hooks is a tty file. To work around this I'm
    # forcing NO_COLOR. Though VS Code should address by not providing a tty
    # file. Right now this affects lefthook.
    export NO_COLOR=1
  fi
}

function is_in_vscode {
  local tmp=("${!VSCODE_@}")
  [ "${#tmp[@]}" -gt 0 ]
}

function is_in_vscode_terminal {
  [ -n "${VSCODE_INJECTION:-}" ]
}

load_environment
