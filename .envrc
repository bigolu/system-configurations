# shellcheck shell=bash

function main {
  # They get pretty noisy
  hide_logs
  set_up_nix
  set_up_python
  layout go
  dotenv_if_exists secrets.env
  print_reminder_to_load_direnv_in_editor
}

function hide_logs {
  if [[ -t 1 ]]; then
    export DIRENV_LOG_FORMAT=''
  fi
}

function set_up_nix {
  # SYNC: SYS_CONF_SUBS
  export NIX_CONFIG="${NIX_CONFIG:-}"$'\n''extra-substituters = https://bigolu.cachix.org https://nix-community.cachix.org'

  source_url \
    'https://raw.githubusercontent.com/nix-community/nix-direnv/3.0.6/direnvrc' \
    'sha256-RYcUJaRMf8oF5LznDrlCXbkOQrywm0HDv1VjYGaJGdM='
  # The flake evaluation cache for a devShell seems to be invalidated by any change
  # to the repo. Since evaluation is pretty slow, I'll manually reload the devShell.
  nix_direnv_manual_reload
  use flake .#
}

function print_reminder_to_load_direnv_in_editor {
  printf '\n\e[34mâ”ƒ tip: Remember to [re]load direnv inside your editor as well.\e(B\e[m\n'
}

function set_up_python {
  if [[ -z ${VIRTUAL_ENV+set} ]]; then
    return
  fi

  layout_dir="$(direnv_layout_dir)"
  if [[ ! -e $layout_dir ]]; then
    mkdir "$layout_dir"
  fi

  # So VS Code can find it. The venv needs a stable location so I don't have to
  # update the path in VS Code when the nix store path for python changes.
  ln --symbolic --force --no-dereference "$VIRTUAL_ENV" "$layout_dir/python"

  # non-venv Python is also put on the PATH so I need to make sure the venv one comes
  # first.
  PATH_add "$layout_dir/python/bin"
}

main
