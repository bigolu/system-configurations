# shellcheck shell=bash

# Don't show any logs, it gets pretty noisy.
if [[ -t 1 ]]; then
  export DIRENV_LOG_FORMAT=''
fi

source_url \
  'https://raw.githubusercontent.com/nix-community/nix-direnv/3.0.6/direnvrc' \
  'sha256-RYcUJaRMf8oF5LznDrlCXbkOQrywm0HDv1VjYGaJGdM='

function main {
  set_up_nix
  layout go

  # When this issue[1] closes, I should use doppler's named pipe feature.
  # [1]: https://github.com/direnv/direnv/issues/1312
  dotenv_if_exists secrets.env

  print_reminder_to_reload_direnv_in_editor

  # Why I don't want direnv to automatically reload:
  #   - It reloads whenever a watched file's modification time changes, even if the
  #     contents are the same.
  #   - Sometimes a watched file changes, but I don't want to reload. Like when
  #     doing a git checkout or interactive rebase.
  #
  # This needs to be done last.
  disable_direnv_auto_reload
}

function set_up_nix {
  # SYNC: SYS_CONF_SUBS
  export NIX_CONFIG="${NIX_CONFIG:-}"$'\n''extra-substituters = https://bigolu.cachix.org https://nix-community.cachix.org'

  # The flake evaluation cache for a devShell seems to be invalidated by any change
  # to the repo. Since evaluation is pretty slow, I'll manually reload the devShell.
  nix_direnv_manual_reload
  use flake .#
}

function print_reminder_to_reload_direnv_in_editor {
  # I only want to print the reminder if direnv is being reloaded, not on the first
  # load. The DIRENV_DIFF variable won't be set on the first load so if it's set,
  # direnv must be reloading.
  if [[ -n "${DIRENV_DIFF+set}" ]]; then
    printf "\n\e[34mâ”ƒ system-configurations: Don't forget to reload direnv inside your editor as well.\e(B\e[m\n"
  fi
}

function disable_direnv_auto_reload {
  readarray -d '' files < <(direnv watch-print --null)
  # Retain file watches outside the project so direnv reloads after direnv
  # allow/block.
  files_outside_project=()
  for file in "${files[@]}"; do
    if [[ "$file" != "$PWD"* ]]; then
      files_outside_project+=("$file")
    fi
  done

  layout_dir="$(direnv_layout_dir)"
  if [[ ! -e "$layout_dir" ]]; then
    mkdir "$layout_dir"
  fi
  export DIRENV_RELOAD_FILE="$layout_dir/reload"
  if [[ ! -e "$DIRENV_RELOAD_FILE" ]]; then
    touch "$DIRENV_RELOAD_FILE"
  fi

  unset DIRENV_WATCHES
  watch_file "${files_outside_project[@]}" "$DIRENV_RELOAD_FILE"
}

main
