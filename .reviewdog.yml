runner:
  action-lint:
    cmd: actionlint -no-color
    errorformat:
      - "%f:%l:%c: %m"
    level: error
  yaml-lint:
    cmd: yamllint --strict --format parsable .
    errorformat:
      - "%f:%l:%c: [%t%*[a-z]] %m"
    level: error
  shellcheck:
    cmd: bash ./scripts/shellcheck-all.bash --color=never --format=gcc
    errorformat:
      - "%f:%l:%c: %trror: %m"
      - "%f:%l:%c: %tarning: %m"
      - "%f:%l:%c: %tote: %m"
    level: error
  # TODO: The cli isn't respecting my dictionary or ignore files so I can't use it.
  # https://github.com/valentjn/ltex-ls/issues/283
  #
  # ltex-cli:
  #   cmd: bash ./scripts/ltex-cli-all.bash
  #   errorformat:
  #     - "%f:%l:%c: %m"
  #   level: error
  markdownlint-cli2:
    cmd: bash ./scripts/markdownlint-cli2-all.bash
    errorformat:
      - "%f:%l:%c: %m"
      - "%f:%l:%c %m"
      - "%f:%l: %m"
      - "%f:%l %m"
    level: error
  desktop-file-validate:
    cmd: bash ./scripts/desktop-file-validate-all.bash
    errorformat:
      - "%f: %m"
    level: error
  fish:
    cmd: bash ./scripts/fish-all.bash
    errorformat:
      - "%f (line %l): %m"
    level: error
  ruff:
    cmd: ruff check . --output-format sarif
    format: sarif
    level: error
  dotenv-linter:
    # I think it's ok to quote values whether they need to be or not, better
    # safe than sorry.
    cmd: dotenv-linter --recursive --exclude .env --skip QuoteCharacter --
    format: dotenv-linter
    level: error
  # golangci-lint:
  #   cmd: golangci-lint run --out-format sarif
  #   format: sarif
  #   level: error
