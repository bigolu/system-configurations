[global]
  excludes = [
    # No formatters are available for these files
    "*.gitkeep",
    "*.txt",
    "*.hjson",
    "*.zsh",
    "*.desktop",
    "*.conf",
    "*.plist",
    "*.icns",
    "*.keylayout",
    "*.strings",
    "*.service",
    "*.timer",
    "*.ipy",
    "*.ini",
    ".editorconfig",
    ".gitignore",
    ".ignore",
    ".shellcheckrc",
    "flake-modules/bundler/gozip/go.mod",
    ".lycheeignore",
    ".env.example",

    # These have no file extension so there's no way to tell which formatter
    # should be used.
    "dotfiles/bat/config",
    "dotfiles/cosmic/v1-shortcuts",
    "dotfiles/firefox-developer-edition/my-firefox",
    "dotfiles/flatpak/overrides/global",
    "dotfiles/fzf/bin/fzf-help-preview",
    "dotfiles/fzf/bin/fzf-zoom",
    "dotfiles/general/bin-macos/trash",
    "dotfiles/general/bin/edit",
    "dotfiles/general/bin/elevate",
    "dotfiles/general/bin/pbcopy",
    "dotfiles/general/bin/process-output",
    "dotfiles/git/bin/git-clean-branches",
    "dotfiles/git/bin/git-http-to-ssh",
    "dotfiles/git/bin/git-r",
    "dotfiles/git/config",
    "dotfiles/neovim/bin/conform",
    "dotfiles/neovim/linux-bin/wezterm",
    "dotfiles/nix/bin/nix",
    "dotfiles/nix/bin/nix-gcroots",
    "dotfiles/nix/bin/nix-upgrade-profiles",
    "dotfiles/nix/bin/pynix",
    "dotfiles/ripgrep/bin/djvutorga",
    "dotfiles/ripgrep/ripgreprc",
    "dotfiles/skhd/bin/yabai-move",
    "dotfiles/skhd/bin/yabai-remove-from-stack",
    "dotfiles/skhd/skhdrc",
    "dotfiles/smart_plug/linux/turn-off-speakers",
    "dotfiles/yabai/yabairc",
    "dotfiles/yash/yashrc",

    # Generated files
    "flake-modules/bundler/gozip/go.sum",
    "flake-modules/bundler/gozip/gomod2nix.toml",
    "*.lock",
  ]

[formatter.toml]
  command = "taplo"
  options = ["format"]
  includes = ["*.toml"]

[formatter.prettier]
  command = "prettier"
  options = ["--write"]
  includes = ["*.js", "*.json", "*.json5", "*.jsonc", "*.md", "*.yml", "*.yaml"]
  # VS Code's configuration files end in .json, so prettier will format
  # them using the json parser, but they are actually jsonc files.
  excludes = [".vscode/*.json"]

# VS Code's configuration files end in .json, but they are actually jsonc
# files.
[formatter.prettier-vscode]
  command = "prettier"
  options = ["--parser", "jsonc", "--write"]
  includes = [".vscode/*.json"]

[formatter.sh]
  command = "shfmt"
  options = ["--write"]
  includes = ["*.sh"]

[formatter.bash]
  command = "shfmt"
  options = ["--write"]
  includes = ["*.envrc", "*.bash"]

[formatter.fish]
  # TODO: Doesn't adhere to the treefmt spec for formatters in that it
  # unconditionally writes to input files, even if everything is formatted
  # correctly.
  #
  # It's fixed on master, but will be part of the release for v4.0.
  #
  # I would just comment out the `formatter.fish` entry, but then treefmt would
  # warn me that any files that would have been formatted by it now have no
  # formatter. Instead, I'll make it a no-op.
  command = "bash"
  options = ["-c", "true"]
  # command = "fish_indent"
  # options = ["--write"]
  includes = ["*.fish"]

[formatter.nix-nixfmt]
  command = "nixfmt"
  includes = ["*.nix"]

[formatter.justfile]
  # TODO: just's builtin formatter currently removes/rearranges comments. Until
  # this is fixed I'll disable it: https://github.com/casey/just/issues/862.
  # I would just comment out the `formatter.just` entry, but then treefmt would
  # warn me that any files that would have been formatted by it now have no
  # formatter. Instead, I'll make it a no-op.
  command = "bash"
  options = ["-c", "true"]
  # command = "just"
  # options = ["--unstable", "--fmt", "--justfile"]
  includes = ["justfile"]

[formatter.lua]
  command = "stylua"
  includes = ["*.lua"]

[formatter.go]
  command = "gofmt"
  options = ["-w"]
  includes = ["*.go"]

[formatter.python-ruff-format]
  command = "ruff"
  options = ["format"]
  includes = ["*.py"]

[formatter.python-ruff-format-sort-imports]
  command = "ruff"
  options = ["check", "--select", "I", "--fix-only"]
  includes = ["*.py"]
