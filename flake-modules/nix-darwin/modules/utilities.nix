{
  pkgs,
  config,
  lib,
  ...
}:
let
  mkScript =
    {
      isEnabled,
      file,
      marker,
      line,
    }:
    let
      sed = "${pkgs.gnused}/bin/sed";
    in
    ''
      ${
        if isEnabled then
          ''
            touch ${file}
            if ! grep '${marker}' ${file} > /dev/null; then
              printf '\n%s\n' ${lib.escapeShellArg line}' # generated by nix-darwin: ${marker}' >> ${file}
            fi
          ''
        else
          ''
            touch ${file}
            if grep '${marker}' ${file} > /dev/null; then
              ${sed} -i '/${marker}/d' ${file}
            fi
          ''
      }
    '';
in
{
  options = {
    configureLoginShellForNixDarwin = lib.mkOption {
      type = lib.types.bool;
      default = false;
    };
  };

  config =
    let
      # TODO: Consider upstreaming
      nixDarwinScript = mkScript {
        isEnabled = config.configureLoginShellForNixDarwin;
        file = "/etc/zprofile";
        marker = "configureLoginShellForNixDarwin";
        line = ''export PATH="/run/current-system/sw/bin:$PATH"'';
      };

      inherit (lib.strings) optionalString;
    in
    {
      system.activationScripts.postActivation.text = ''
        echo >&2 '[bigolu] Configuring login shell for nix-darwin...'
        ${nixDarwinScript}
      '';

      # Reapply the changes if they get removed, which can happen during a macOS update. See:
      # https://determinate.systems/posts/nix-survival-mode-on-macos/
      #
      # Adapted from:
      # https://github.com/LnL7/nix-darwin/blob/230a197063de9287128e2c68a7a4b0cd7d0b50a7/modules/services/activate-system/default.nix#L20
      launchd.daemons = lib.attrsets.optionalAttrs config.configureLoginShellForNixDarwin {
        restore-profile-changes = {
          serviceConfig.RunAtLoad = true;
          serviceConfig.KeepAlive.SuccessfulExit = false;

          script = ''
            set -e
            set -o pipefail
            export PATH="${pkgs.gnugrep}/bin:${pkgs.coreutils}/bin:@out@/sw/bin:/usr/bin:/bin:/usr/sbin:/sbin"

            ${optionalString config.configureLoginShellForNixDarwin nixDarwinScript}
          '';
        };
      };
    };
}
