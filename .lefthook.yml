# yaml-language-server: $schema=https://json.schemastore.org/lefthook.json

# TODO: The VS Code output panel doesn't interpret escape sequences yet the
# output file it gives to git hooks is a tty file. To work around this I'm
# setting no_tty. Though VS Code should address by not providing a tty
# file. Right now this affects lefthook.
no_tty: true

# By default lefthook uses true colors (e.g. #FFFFFF), but they may notf be
# readable depending on the terminal background color. Instead I'm using ANSI
# colors since they come from the terminal's color palette.
# TODO: They should change this.
colors:
  cyan: 6
  gray: 8
  green: 2
  red: 1
  yellow: 3

output:
  - failure
  - execution
  - execution_out
  - execution_info

pre-push:
  commands:
    check:
      # TODO: treefmt needs this because if it doesn't have a TTY input it
      # lags. I need to report this.
      interactive: true
      env:
        DIRENV_LOG_FORMAT: ""
      run: direnv exec "$PWD" bash scripts/check.bash {push_files}

post-merge:
  commands:
    change-notifications:
      env:
        DIRENV_LOG_FORMAT: ""
        COMMIT_1: "ORIG_HEAD"
        COMMIT_2: "HEAD"
      run: direnv exec "$PWD" lefthook run change-notifications

post-rewrite:
  commands:
    change-notifications:
      only: rebase
      env:
        DIRENV_LOG_FORMAT: ""
        COMMIT_1: "ORIG_HEAD"
        COMMIT_2: "HEAD"
      run: direnv exec "$PWD" lefthook run change-notifications
    # This is too noisy to do on all change-related hooks.
    change-notification-for-host-configuration:
      only: rebase
      env:
        DIRENV_LOG_FORMAT: ""
        DIFF: "host"
      run: >
        direnv exec "$PWD"
        bash scripts/git-hooks/notify.bash
        'The following files have changed, which may affect the host configuration. Consider running `just switch`: '
        {files}

post-checkout:
  commands:
    change-notifications:
      env:
        DIRENV_LOG_FORMAT: ""
      # TODO: Open an issue for passing the git hook arguments to the only/skip
      # commands. Then I could remove this script.
      run: COMMIT_1={1} COMMIT_2={2} direnv exec "$PWD" bash scripts/git-hooks/run-if-not-file-checkout.bash lefthook run change-notifications

# NOTE: Everything here will be run in parallel:
# https://github.com/evilmartians/lefthook/issues/132#issuecomment-1833411442
change-notifications:
  files: git diff-tree -r --name-only --no-commit-id "$COMMIT_1" "$COMMIT_2"
  commands:
    envrc-secrets:
      glob: "envrc-secrets-example.bash"
      env:
        DIRENV_LOG_FORMAT: ""
        DIFF: "envrc-secrets"
      run: >
        direnv exec "$PWD"
        bash scripts/git-hooks/notify.bash
        'envrc-secrets-example.bash has changed, consider updating your envrc-secrets.bash'
        'envrc-secrets-example.bash'
    dev-shell:
      glob: "flake{.nix,.lock,-modules/{dev-shell/,lib,overlay/}**.nix}"
      env:
        DIRENV_LOG_FORMAT: ""
        DIFF: "dev-shell"
      run: >
        direnv exec "$PWD"
        bash scripts/git-hooks/notify.bash
        'The following files have changed and may affect your devShell, consider running `just sync-nix-direnv`: '
        {files}
    fish:
      glob: "dotfiles/fish/conf.d/**.fish"
      env:
        DIRENV_LOG_FORMAT: ""
        DIFF: "fish"
      run: >
        direnv exec "$PWD"
        bash scripts/git-hooks/notify.bash
        'The following files have changed and may affect your devShell, consider restarting any running terminals: '
        {files}
    nix:
      glob: "flake.lock"
      env:
        DIRENV_LOG_FORMAT: ""
        DIFF: "nix"
      run: >
        direnv exec "$PWD"
        bash scripts/git-hooks/notify.bash
        'The flake.lock has changed, consider running `just upgrade-nix`'
    nix-fix:
      glob: "dotfiles/nix/nix-fix/**"
      env:
        DIRENV_LOG_FORMAT: ""
        DIFF: "nix-fix"
      run: >
        direnv exec "$PWD"
        bash scripts/git-hooks/notify.bash
        'Files related to the Nix $PATH fix have changed, consider re-running its installer: '
        {files}
    # TODO: lefthook syncs hooks automatically, though I'd prefer if I had
    # control over that.
    # lefthook:
    #   glob: ".lefthook.yml"
    #   env:
    #     DIRENV_LOG_FORMAT: ''
    #     DIFF: "lefthook"
    #   run: >
    #     direnv exec "$PWD"
    #     bash scripts/git-hooks/notify.bash
    #     '.lefthook.yml has changed, consider running `just sync-git-hooks`'
