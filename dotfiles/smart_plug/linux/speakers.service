# WARNING: This file should not be used directly, it contains variables in the
# form @<variable_name>@ that will be replaced by Nix.

[Unit]
Description=Speakers
# By default, systemd also adds a conflict on shutdown.target so the service is
# stopped before shutdown/reboot[1].
#
# [1]: https://www.freedesktop.org/software/systemd/man/latest/systemd.service.html#Default%20Dependencies
Conflicts=sleep.target
Before=sleep.target
# The service should be stopped before the network is turned off. Since systemd
# stops services in the reverse order that they were started, having this
# service start after network.target ensures that this service is stopped before
# the network.
#
# While the above should be true, the network manager on my machine,
# NetworkManager, isn't always turned off through systemd so a workaround
# is needed. See speakers.nix for details.
Wants=network.target
After=network.target

[Service]
# I'm using the oneshot type so I can use RemainAfterExit, see below.
Type=oneshot
# This service should still be considered active after the ExecStart command
# ends since I want the active state to represent the speakers being on.
RemainAfterExit=yes
# Make multiple discovery attempts to account for network unavailability. For
# example, when the machine first starts up, or wakes from sleep, the
# network may not be online yet. I could have this service start after
# network-online.target, but systemd does not recommend relying on it[1]. Also,
# that target is not useful for sleep/wake: Despite the network being turned
# off before sleep and restarted on wake, network-online.target remains active
# the entire time.
#
# I want the service to stop attempting to connect after 3 minutes. Since
# discovery times out after 5 seconds, 36 attempts * 5 seconds = 180 seconds
# i.e. 3 minutes.
#
# [1]: https://systemd.io/NETWORK_ONLINE/
ExecStart=@speakerctl@ --attempts 36 on
ExecStop=@speakerctl@ off

[Install]
# Start the service when the system either wakes or first reaches the graphical
# interface i.e. login screen.
WantedBy=graphical.target wake.target
