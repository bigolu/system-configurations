{
  "files.associations": {
    ".envrc": "shellscript",
  },
  "editor.rulers": [
    85
  ],

  // Automatically restart all the other extensions after loading the direnv
  // environment. This way the other extensions will have the environment as
  // well.
  "direnv.restart.automatic": true,

  "glspc.documentFilters": [{ "pattern": "**" }],
  "glspc.serverCommand": "efm-langserver",
  "glspc.serverCommandArguments": ["-c", "efm-langserver.yaml"],
  "glspc.trace.server": "verbose",

  "nix.enableLanguageServer": true,
  "nix.serverPath": "nixd",
  "nix.serverSettings": {
    "nixd": {
      "nixpkgs": {
        "expr": "import ./nix/packages",
      },
      "options": {
        "comp_2": {
          "expr": "(import ./. {}).darwinConfigurations.comp_2.options"
        },
        "comp_1": {
          "expr": "(import ./. {}).homeConfigurations.comp_1.options",
        },
      },
    },
  },

  // So the editor doesn't lag
  "go.lintFlags": ["--fast"],
  "go.lintTool": "golangci-lint",

  "ltex.completionEnabled": true,
  "ltex.enabled": [
    "git-commit",
    "markdown",
  ],

  // Use our version for consistency
  "evenBetterToml.taplo.bundled": false,

  "python.languageServer": "Jedi",
  "mypy-type-checker.preferDaemon": true,
  "mypy-type-checker.reportingScope": "workspace",
  "mypy-type-checker.importStrategy": "fromEnvironment",
  "python.defaultInterpreterPath": ".dev-shell-state/python/bin/python",
  "debugpy.debugJustMyCode": false,

  "Lua.misc.executablePath": "lua-language-server",

  "fish-lsp.useGlobalExecutable": true,

  "runOnSave.ignoreFilesBy": [".gitignore"],
  "runOnSave.shell": "bash",
  "runOnSave.commands": [
    {
      // Only run formatters because some other auto-fixes remove unused symbols
      // which can be annoying if you're in the middle of writing something.
      "command": "RUN_FIX_ACTIONS='' lefthook run check --jobs format --file ${fileRelative}",
      // If the file isn't doesn't have valid syntax, the formatter will exit with a
      // non-zero code, but we don't want the output window to be focused when that
      // happens.
      "doNotDisturb": true,
    },
  ]
}
