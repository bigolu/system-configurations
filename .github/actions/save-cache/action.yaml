name: Save Cache
description: Save cache
runs:
  using: "composite"
  steps:
    - id: pre-nix-cache-save
      shell: bash-script {0}
      run: |
        old="$HOME/.cache/gc-roots"

        new="$(mktemp)"
        {
          # We only want extant symlink destinations to be printed, but we don't want
          # realpath to exit with a non-zero code if it encounters a broken symlink
          # since that would cause the script to exit.
          set +o errexit
          realpath --canonicalize-existing /nix/var/nix/gcroots/auto/*
          set -o errexit
        } |
          # `comm` requires input files to be sorted
          sort >"$new"

        if [[ -e $old && $(<"$old") == $(<"$new") ]]; then
          echo 'should-save=false' >>"$GITHUB_OUTPUT"
          exit
        fi

        echo 'should-save=true' >>"$GITHUB_OUTPUT"

        if [[ -e $old ]]; then
          echo '::group::GC roots diff'
          echo 'Added roots:'
          comm --nocheck-order -13 "$old" "$new"
          echo
          echo 'Removed roots:'
          comm --nocheck-order -23 "$old" "$new"
          echo '::endgroup::'
        else
          echo 'Old cache did not exist'
        fi

        cp "$new" "$old"

        # Run garbage collection to stop the nix store from growing indefinitely.
        # This can happen because on a cache miss, we restore from the most recently
        # used cache entry so we have to avoid accumulating data from old cache
        # entries over time.
        echo '::group::Garbage collection logs'
        nix-collect-garbage --delete-old
        echo '::endgroup::'
    - if: steps.pre-nix-cache-save.outputs.should-save == 'true'
      uses: nix-community/cache-nix-action/save@135667ec418502fa5a3598af6fb9eb733888ce6a # v6
      with:
        purge: true
        purge-primary-key: always
        # SYNC: cache-settings-nix
        primary-key: ${{ github.workflow }}-${{ github.job }}-nix-${{ runner.arch }}-${{ runner.os }}
        paths: |
          ~/.cache/gc-roots
    - id: pre-direnv-and-CNS-cache-save
      shell: bash-script {0}
      env:
        GH_TOKEN: ${{ github.token }}
        # SYNC: cache-settings-direnv-and-CNS
        KEY: ${{ github.workflow }}-${{ github.job }}-direnv-and-CNS-${{ runner.arch }}-${{ runner.os }}
      run: |
        old="$HOME/.cache/direnv-and-CNS-hash"

        new="$(mktemp)"
        shopt -s globstar
        # The glob may include directories and broken symlinks and `cat` will
        # exit with 1 since it doesn't support them, but we don't want the script to
        # exit when that happens.
        set +o errexit
        cat ~/.cache/{direnv,cached-nix-shell}/** | sha256sum >"$new"
        set -o errexit

        if [[ -e $old && $(<"$old") == $(<"$new") ]]; then
          echo 'should-save=false' >>"$GITHUB_OUTPUT"
          exit
        fi

        echo 'should-save=true' >>"$GITHUB_OUTPUT"

        if [[ -e $old ]]; then
          printf 'Expected:\n%s\nGot:\n%s\n' "$(<"$old")" "$(<"$new")"
        else
          echo 'Old cache did not exist'
        fi

        # actions/cache won't overwrite a cache with the same key so we'll delete it.
        if [[ -e $old ]]; then
          gh cache delete "$KEY"
        fi

        cp "$new" "$old"

        # We remove these directories, if they grow past a certain threshold, to
        # prevent them from growing indefinitely. This can happen because on a cache
        # miss, we restore from the most recently used cache entry so we have to
        # avoid accumulating data from old cache entries over time.
        for directory in ~/.cache/direnv ~/.cache/cached-nix-shell; do
          size="$(du -m --summarize "$directory" | cut -f1)"
          max=10
          if ((size > max)); then
            echo "Cached directory '$directory' is over $max megabytes, deleting..."
            rm -rf "$directory"
          fi
        done
    - if: steps.pre-direnv-and-CNS-cache-save.outputs.should-save == 'true'
      uses: actions/cache/save@v4
      with:
        # SYNC: cache-settings-direnv-and-CNS
        key: ${{ github.workflow }}-${{ github.job }}-direnv-and-CNS-${{ runner.arch }}-${{ runner.os }}
        path: |
          ~/.cache/direnv-and-CNS-hash
          ~/.cache/cached-nix-shell
          ~/.cache/direnv
