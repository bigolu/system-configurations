name: Save Cache
description: Save cache
runs:
  using: "composite"
  steps:
    - id: should-save
      shell: bash-script {0}
      run: |
        old="$HOME/.cache/gc-roots"

        new="$(mktemp)"
        {
          # We only want extant symlink destinations to be printed, but we don't want
          # realpath to exit with a non-zero code if it encounters a broken symlink
          # since that would cause the script to exit.
          set +o errexit
          realpath --canonicalize-existing /nix/var/nix/gcroots/auto/*
          set -o errexit
        } |
          # `comm` requires input files to be sorted
          sort >"$new"

        if [[ -e $old && $(<"$old") == $(<"$new") ]]; then
          echo 'should-save=false' >>"$GITHUB_OUTPUT"
          exit
        fi

        echo 'should-save=true' >>"$GITHUB_OUTPUT"

        if [[ -e $old ]]; then
          echo '::group::Store paths diff'
          echo 'Added paths:'
          comm --nocheck-order -13 "$old" "$new"
          echo
          echo 'Removed paths:'
          comm --nocheck-order -23 "$old" "$new"
          echo '::endgroup::'
        else
          echo 'Old cache did not exist'
        fi

        cp "$new" "$old"

        # Run garbage collection to stop the nix store from growing indefinitely.
        # This can happen because on a cache miss, we restore from the most recently
        # used cache entry so we have to avoid accumulating data from old cache
        # entries over time.
        echo '::group::Garbage collection logs'
        nix-collect-garbage --delete-old
        echo '::endgroup::'

        # We remove these directories, if they grow past a certain threshold, to
        # prevent them from growing indefinitely. This can happen because on a cache
        # miss, we restore from the most recently used cache entry so we have to
        # avoid accumulating data from old cache entries over time.
        for directory in ~/.cache/direnv ~/.cache/cached-nix-shell; do
          size="$(du -m --summarize "$directory" | cut -f1)"
          max=10
          if ((size > max)); then
            echo "Cached directory '$directory' is over $max megabytes, deleting..."
            rm -rf "$directory"
          fi
        done
    - if: steps.should-save.outputs.should-save == 'true'
      uses: nix-community/cache-nix-action/save@v6
      with:
        purge: true
        purge-primary-key: always
        # SYNC: cache-settings
        primary-key: ${{ github.workflow }}-${{ github.job }}-nix-and-direnv-${{ runner.arch }}-${{ runner.os }}
        paths: |
          ~/.cache/cached-nix-shell
          ~/.cache/direnv
          ~/.cache/gc-roots
