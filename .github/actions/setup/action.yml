name: Setup
description: Install Nix, configure the cache(s), and load a devShell.
inputs:
  dev-shell:
    description: The name of the devShell to activate
    required: false
    default: ci
  cachix-auth-token:
    description: An authentication token for Cachix
    required: true
  use-magic-nix-cache:
    description: Use Magic Nix Cache
    required: false
    default: "true"
runs:
  using: "composite"
  steps:
    # TODO: Renovate won't manage this action's version until the following is
    # resolved:
    # https://github.com/renovatebot/renovate/issues/28016
    - uses: DeterminateSystems/nix-installer-action@main
      with:
        # SYNC: SYS_CONF_PUBLIC_KEYS SYS_CONF_SUBS
        # ^ With the exception of Cachix, since the Cachix action adds the
        # subsituter.
        #
        # Double the default size (64MiB -> 124MiB) since I kept hitting it
        extra-conf: |
          download-buffer-size = 134217728;
          extra-trusted-public-keys = nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs=
          extra-trusted-substituters = https://nix-community.cachix.org
          extra-substituters = https://nix-community.cachix.org
          show-trace = true
        nix-package-url: https://releases.nixos.org/nix/nix-2.24.10/nix-2.24.10-x86_64-${{ runner.os == 'Linux' && 'linux' || 'darwin' }}.tar.xz
    # TODO: This cache shouldn't be enabled for packages that only get used in CI,
    # but since I usually hit the rate limit for the GitHub Action cache, I use this
    # as a backup.
    - uses: cachix/cachix-action@ad2ddac53f961de1989924296a1f236fcfbaa4fc # v15
      with:
        name: bigolu
        authToken: "${{ inputs.cachix-auth-token }}"
    - if: inputs.use-magic-nix-cache == 'true'
      # TODO: Renovate won't manage this action's version until the following is
      # resolved:
      # https://github.com/renovatebot/renovate/issues/28016
      uses: DeterminateSystems/magic-nix-cache-action@main
      with:
        # Since I want to cache everything, I set this to a URL that doesn't belong
        # to any of my substituters.
        upstream-cache: https://example.com
        use-flakehub: false
    - run: nix run .#nixDevelopGha -- .#${{ inputs.dev-shell }}
      # Since this is the step that loads a dev-shell, there isn't one loaded here.
      # So instead of using ci-bash like I usually do, I'll use "bash". When the
      # value is "bash", GitHub Actions will run:
      #   bash --noprofile --norc -eo pipefail {0}
      shell: bash
