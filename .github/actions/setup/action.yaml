name: Setup
description: Set up Nix and direnv
inputs:
  nix-dev-shell:
    description: The name of the Nix devShell to load with direnv
    required: false
    default: ""
runs:
  using: "composite"
  steps:
    # The action run after this, nix-community/cache-nix-action, depends on this
    # specific Nix installer. Though there's an open issue for supporting a different
    # installer: https://github.com/nix-community/cache-nix-action/issues/60
    - uses: nixbuild/nix-quick-install-action@63ca48f939ee3b8d835f4126562537df0fee5b91 # v32
      with:
        nix_conf: |
          # Increase the buffer limit to 124MiB since the buffer would often reach
          # the default limit of 64MiB.
          download-buffer-size = 134217728
          show-trace = true
          # This way, if we fail to build something, we can make its derivation a GC
          # root so the derivation's dependencies, i.e. build dependencies, don't get
          # garbage collected. Since the they won't get garbage collected, they'll be
          # cached and we won't lose our build progress.
          #
          # There's an issue[1] for automating the creation of the derivation GC root.
          #
          # [1]: https://github.com/NixOS/nix/issues/7561
          keep-outputs = true
          # We only want the derivations of failed builds. Doing this will save
          # space.
          keep-derivations = false
    - uses: nix-community/cache-nix-action/restore@135667ec418502fa5a3598af6fb9eb733888ce6a # v6
      with:
        # SYNC: cache-settings-nix
        primary-key: ${{ github.workflow }}-${{ github.job }}-nix-${{ runner.arch }}-${{ runner.os }}
        paths: |
          ~/.cache/gc-roots
    - uses: actions/cache/restore@v4
      with:
        # SYNC: cache-settings-direnv
        key: ${{ github.workflow }}-${{ github.job }}-direnv-${{ runner.arch }}-${{ runner.os }}
        path: |
          ~/.cache/direnv-hash
          ~/.cache/direnv
    - name: Load the direnv Environment
      shell: nix run --file nix/packages bash-script -- {0}
      env:
        NIX_DEV_SHELL: ${{ inputs.nix-dev-shell }}
      run: |
        direnv_wrapper="$(
          nix build --print-out-paths --file nix/packages direnv-wrapper
        )/bin/direnv-wrapper"

        "$direnv_wrapper" direnv.bash export gha >> "$GITHUB_ENV"
        # TODO: Setting the PATH with GITHUB_ENV doesn't work[1].
        #
        # [1]: https://github.com/actions/toolkit/issues/655
        "$direnv_wrapper" direnv.bash exec . bash -c 'echo "$PATH"' >> "$GITHUB_PATH"
