name: Setup
description: Set up Nix and direnv
inputs:
  nix-dev-shell:
    description: The name of the Nix devShell to load with direnv
    required: false
    default: ""
runs:
  using: "composite"
  steps:
    # The action run after this, nix-community/cache-nix-action, depends on this
    # specific Nix installer. Though there's an open issue for supporting a different
    # installer: https://github.com/nix-community/cache-nix-action/issues/60
    #
    - uses: nixbuild/nix-quick-install-action@63ca48f939ee3b8d835f4126562537df0fee5b91 # v32
      with:
        nix_conf: |
          # Increase the buffer limit to 124MiB since the buffer would often reach
          # the default limit of 64MiB.
          download-buffer-size = 134217728
          show-trace = true
        # By default this is ${{ github.token }}. This is a problem because the token
        # changes every job run and since this token gets put in the nix.conf, it
        # invalidates cached-nix-shell's cache.
        github_access_token: ""
    - name: Set variables
      shell: bash
      env:
        SETUP_PRIMARY_KEY: ${{ github.workflow }}-${{ github.job }}-nix-and-direnv-${{ runner.arch }}-${{ runner.os }}
        SETUP_PATHS: |
          ~/.cache/cached-nix-shell
          ~/.cache/direnv
          ~/.cache/store-paths
      run: |
        # The year is part of the key to prevent some cached directories, like
        # ~/.cache/cached-nix-shell, from growing indefinitely. This can happen
        # because on a cache miss, we restore from the most recently used cache entry
        # so we have to avoid accumulating data from old cache entries over time.
        SETUP_PRIMARY_KEY="$(date '+%Y')-$SETUP_PRIMARY_KEY"

        for name in SETUP_PRIMARY_KEY SETUP_PATHS; do
          printf \
            '%s<<SETUP_ACTION_EOV\n%s\nSETUP_ACTION_EOV\n' \
            "$name" \
            "${!name}" \
            >>"$GITHUB_ENV"
        done
    - uses: nix-community/cache-nix-action/restore@v6
      with:
        primary-key: ${{ env.SETUP_PRIMARY_KEY }}
        paths: ${{ env.SETUP_PATHS }}
    - name: Load the direnv Environment
      shell: nix run --file nix/packages bash-script -- {0}
      env:
        NIX_DEV_SHELL: ${{ inputs.nix-dev-shell }}
      run: |
        direnv_wrapper="$(
          nix build \
            --print-out-paths \
            --out-link .direnv/direnv-wrapper-gc-root \
            --file nix/packages direnv-wrapper
        )/bin/direnv-wrapper"

        "$direnv_wrapper" direnv/config/ci.bash export gha >> "$GITHUB_ENV"
        # TODO: Setting the PATH with GITHUB_ENV doesn't work[1].
        #
        # [1]: https://github.com/actions/toolkit/issues/655
        "$direnv_wrapper" direnv/config/ci.bash exec . bash -c 'echo "$PATH"' >> "$GITHUB_PATH"
