name: "Check Pull Request"
on:
  workflow_dispatch:
  pull_request:
  push:
    # These branches get merged without a pull request being made so we need to check
    # them too.
    branches:
      # SYNC: AUTOMERGE_PREFIX
      - "renovate/branch-automerge/**"
# Since we're only interested in checking the latest commit to the branch, we could
# limit the workflow to running at most once per branch, cancelling older runs when
# newer ones start. However, doing so would mean if we push to a branch, a
# pull_request event and push event would trigger this workflow and one of those
# workflow runs would be cancelled. This should be fine, but since the jobs in this
# workflow are required checks they must run. Meaning they can't be skipped as a
# result of this concurrency setting. Even if the same workflow is triggered once by
# a push event and once by a pull_request, like with this workflow, the jobs in both
# of them are considered required checks and they all must run. To get around this,
# we instead limit the workflow to running once per event per branch. This way, we
# still only run the on the latest commit, but a required check is never skipped. To
# skip duplicate runs, we instead use a job.<job_id>.if conditional since skipping
# required checks from there is ok.
concurrency:
  # For more information on how the branch name is calculated see:
  # https://stackoverflow.com/a/71158878
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true
jobs:
  # WARNING: This name is used to specify what checks are required to merge a
  # branch, don't change it without updating the required checks as well.
  lint:
    # Only run if both of the following are true:
    #   - It was not triggered by a pull request event for a Renovate automerge
    #     branch. Those are covered by the push event.
    #   - This branch is not a Renovate branch. I don't think a change made by
    #     Renovate will cause a lint issue.
    #
    # For more information on how the branch name, is calculated see:
    # https://stackoverflow.com/a/71158878
    if: ${{ (! (github.event_name == 'pull_request' && startsWith(github.head_ref, 'renovate/branch-automerge/'))) && (! startsWith(github.head_ref || github.ref_name, 'renovate/')) }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: ci-bash {0}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: ./.github/actions/setup
        with:
          dev-shell: ciLint
          cachix-auth-token: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          lefthook run check --commands check-lint,fix-lint --all-files
          git diff |
          ./scripts/reviewdog.bash \
            -name=fix-lint \
            -f=diff \
            -f.diff.strip=1
  # WARNING: This name is used to specify what checks are required to merge a
  # branch, don't change it without updating the required checks as well.
  check-style:
    # Only run this job if both of the following are true:
    #   - It was not triggered by a pull request event for a Renovate automerge
    #     branch. Those are covered by the push event.
    #   - The branch is not a Renovate branch. I don't think a change made by renovate
    #     would break the code style.
    #
    # For more information on how the branch name, is calculated see:
    # https://stackoverflow.com/a/71158878
    if: ${{ (! (github.event_name == 'pull_request' && startsWith(github.head_ref, 'renovate/branch-automerge/'))) && (! startsWith(github.head_ref || github.ref_name, 'renovate/')) }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: ci-bash {0}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: ./.github/actions/setup
        with:
          dev-shell: ciCheckStyle
          cachix-auth-token: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          lefthook run format --all-files
          git diff |
          ./scripts/reviewdog.bash \
            -name=code-style \
            -f=diff \
            -f.diff.strip=1

  codegen-changed-files:
    # Only run this job if it wasn't triggered by a pull request event for a Renovate
    # automerge branch. Those are covered by the push event.
    if: ${{ ! (github.event_name == 'pull_request' && startsWith(github.head_ref, 'renovate/branch-automerge/')) }}
    runs-on: ubuntu-latest
    outputs:
      any-changed: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          # For push events, we need to get the last two commits so we can get the
          # changed files between them.
          fetch-depth: ${{ github.event.name == 'push' && 2 || 1 }}
      - name: Get changed files that would trigger code generation
        id: changed-files
        uses: tj-actions/changed-files@c3a1bb2c992d77180ae65be6ae6c166cf40f857c # v45
        with:
          # SYNC: GENERATOR_PATTERNS
          files: |
            **/go.mod
            **neovim/lua/*.lua
            "README.md"
            scripts/**
            .envrc
            flake.lock
            flake-modules/**
            flake.nix
  # Ideally, I'd put this job in a separate workflow and use 'paths:' to match
  # relevant files, but since this job is a required check, it can't be skipped at
  # the workflow level[1]. A skip using jobs.<job_id>.if is allowed, but you can't
  # use the 'paths:' filter there. Since I can't use a 'paths:' filter, I decided to
  # use a separate job with an output that tells me if any relevant files were
  # changed. This way, I could use that output in my jobs.<job_id>.if condition.
  #
  # [1]: https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/troubleshooting-required-status-checks#handling-skipped-but-required-checks
  #
  # WARNING: This name is used to specify what checks are required to merge a branch,
  # don't change it without updating the required checks as well.
  ensure-generated-code-is-up-to-date:
    concurrency:
      group: test
      cancel-in-progress: true
    needs: codegen-changed-files
    # By default, if the dependency of a required check fails or is cancelled, the
    # required check is skipped and counted as a successful check[1]. So in addition
    # to checking if a relevant file was changed, I also need to check to see if a
    # dependency failed or was cancelled. If it was, I'll fail this job as well.
    #
    # [1]: https://github.com/actions/runner/issues/2566
    if: ${{ (contains(needs.*.result, 'cancelled') || contains(needs.*.result, 'failure')) || needs.codegen-changed-files.outputs.any-changed == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: ci-bash {0}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: ./.github/actions/setup
        with:
          dev-shell: ciCodegen
          cachix-auth-token: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - if: ${{ contains(needs.*.result, 'cancelled') || contains(needs.*.result, 'failure') }}
        env:
          REASON: ${{ contains(needs.*.result, 'cancelled') && 'was cancelled' || '' }}${{ contains(needs.*.result, 'failure') && 'failed' || '' }}
        run: |
          echo "Error: Dependency job $REASON"
          exit 1
      - env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          lefthook run generate --all-files
          git diff |
          ./scripts/reviewdog.bash \
            -name=code-generation \
            -f=diff \
            -f.diff.strip=1
