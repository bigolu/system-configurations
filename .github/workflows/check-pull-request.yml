name: "Check Pull Request"
on:
  # Ideally, I would add a branch filter here to ignore the branches that are already
  # matched by the push event below. Or if a label filter was allowed, I could add a
  # label to the pull requests opened for the branches below and filter on that.
  # Instead, I use a job.<job_id>.if condition.
  pull_request:
  push:
    # These branches get merged without a pull request being made so I need to check
    # them too.
    branches:
      # SYNC: AUTOMERGE_PREFIX
      - "renovate/branch-automerge/**"
# I'm only interested in checking the latest commit to a branch. That means if a
# commit is pushed and a new check starts before an older one finishes, I want to
# cancel the older one.
#
# However, if a pull request is opened for a Renovate automerge branch, which happens
# if a check on that branch fails, then pushing to that branch would result in two
# checks getting started: one for the push event and one for the pull_request event.
# The one that starts first would get cancelled when the second one starts.
#
# I'm fine with one of them being cancelled since I know that this workflow does the
# same thing regardless of what event triggers it. The problem is GitHub doesn't know
# that, so it requires any required checks _per event_ to run. This means I can't
# cancel a workflow run the way I described in the previous section.
#
# To get around this, I instead limit the workflow to running once _per event_ per
# branch. This way, I still only run the on the latest commit, but a required check
# is never skipped. To skip duplicate runs, I instead use a job.<job_id>.if
# conditional.
concurrency:
  # For more information on how the branch name is calculated see:
  # https://stackoverflow.com/a/71158878
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true
defaults:
  run:
    shell: ci-bash {0}
jobs:
  # WARNING: This name is used to specify what checks are required to merge a
  # branch, don't change it without updating the required checks as well.
  lint:
    # Only run this job if it wasn't triggered by a pull request event for a Renovate
    # automerge branch. Those are covered by the push event.
    if: "! (github.event_name == 'pull_request' && startsWith(github.head_ref, 'renovate/branch-automerge/'))"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: ./.github/actions/setup
        with:
          dev-shell: ciLint
          cachix-auth-token: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: lefthook run check --commands check-lint,fix-lint --all-files
  # WARNING: This name is used to specify what checks are required to merge a
  # branch, don't change it without updating the required checks as well.
  check-style:
    # Only run this job if it wasn't triggered by a pull request event for a Renovate
    # automerge branch. Those are covered by the push event.
    if: "! (github.event_name == 'pull_request' && startsWith(github.head_ref, 'renovate/branch-automerge/'))"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: ./.github/actions/setup
        with:
          dev-shell: ciCheckStyle
          cachix-auth-token: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: lefthook run format --all-files

  codegen-changed-files:
    # Only run this job if it wasn't triggered by a pull request event for a Renovate
    # automerge branch. Those are covered by the push event.
    if: "! (github.event_name == 'pull_request' && startsWith(github.head_ref, 'renovate/branch-automerge/'))"
    runs-on: ubuntu-latest
    outputs:
      any-changed: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          # For push events, I need to get the whole history so I can get the
          # changed files between the head of the branch that triggered the push
          # event and the default branch.
          fetch-depth: ${{ github.event.name == 'push' && 0 || 1 }}
      - name: Get changed files that would trigger code generation
        id: changed-files
        uses: tj-actions/changed-files@c3a1bb2c992d77180ae65be6ae6c166cf40f857c # v45
        with:
          # By default, on a push event, it will only diff the commit pointed to by
          # the current branch with its parent commit. Instead, I want to diff the
          # current branch with the default branch. This is because the current
          # branch will get merged into the default branch so I want all the changes
          # between the two.
          base_sha: ${{ github.event_name == 'push' && github.event.repository.default_branch || '' }}
          # SYNC: GENERATOR_PATTERNS
          files: |
            **/go.mod
            **neovim/lua/*.lua
            "README.md"
            scripts/**
            .envrc
            flake.lock
            flake-modules/**
            flake.nix
  # Ideally, I'd put this job in a separate workflow and use
  # 'on.<push|pull_request>.paths' to match relevant files, but since this job is a
  # required check, it can't be skipped at the workflow level[1]. A skip using
  # jobs.<job_id>.if is allowed, but you can't use a path filter there. Instead, I
  # decided to use a separate job with an output that tells me if any relevant files
  # were changed. This way, I could use that output in my jobs.<job_id>.if condition.
  #
  # [1]: https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/troubleshooting-required-status-checks#handling-skipped-but-required-checks
  #
  # WARNING: This name is used to specify what checks are required to merge a branch,
  # don't change it without updating the required checks as well.
  ensure-generated-code-is-up-to-date:
    needs: codegen-changed-files
    # By default, if the dependency of a required check fails or is cancelled, the
    # required check is skipped and counted as a successful check[1]. So in addition
    # to checking if a relevant file was changed, I also need to see if a dependency
    # failed or was cancelled. If it was, I'll fail this job.
    #
    # [1]: https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/troubleshooting-required-status-checks#handling-skipped-but-required-checks
    if: >
      contains(needs.*.result, 'cancelled')
      || contains(needs.*.result, 'failure')
      || needs.codegen-changed-files.outputs.any-changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: ./.github/actions/setup
        with:
          dev-shell: ciCodegen
          cachix-auth-token: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - if: >
          contains(needs.*.result, 'cancelled')
          || contains(needs.*.result, 'failure')
        env:
          REASON: ${{ contains(needs.*.result, 'cancelled') && 'was cancelled' || 'failed' }}
        run: |
          echo "Error: Dependency job $REASON"
          exit 1
      - env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: lefthook run generate --all-files
