name: Cache Build Results
on:
  push:
    # Only run when the files changed may impact what we cache. This includes
    # files that:
    # - Change the version of packages
    # - Change the packages used
    # - Change this action
    paths:
      - ".github/workflows/cache-build-results.yml"
      - "./github/actions/setup/**"
      - "flake.nix"
      - "flake.lock"
      - "flake-modules/**"
concurrency:
  # Since we are only interested in caching packages from the latest commit to
  # the branch, we will limit the workflow to running at most once per branch,
  # cancelling older runs when newer ones start.
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true
jobs:
  add-to-cachix:
    # I would use `on.push.branches-ignore`, but you can't reference context
    # variables from there and I don't want to hardcode the default branch. The
    # drawback of this method is that the workflow will start on every push and
    # immediately cancel if the branch isn't the default branch. This means the
    # cancelled runs will show up in the GitHub actions dashboard, even though
    # we don't care about them.
    if: github.ref_name == github.event.repository.default_branch
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # macos-latest uses M1 so I'll just use the most recent version of macOS
        # that they still on run intel macs
        os: [ubuntu-latest, macos-13]
      # This way we can fix the failures on all matrix jobs at once instead of
      # fixing one bug only to find another on a different matrix job.
      fail-fast: false
    steps:
      - uses: ./github/actions/setup
        with:
          devshell-name: ci
      - uses: cachix/cachix-action@ad2ddac53f961de1989924296a1f236fcfbaa4fc # v15
        with:
          name: bigolu
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          skipAddingSubstituter: true
      - run: NIXPKGS_ALLOW_UNFREE=1 nix --impure --show-trace build
